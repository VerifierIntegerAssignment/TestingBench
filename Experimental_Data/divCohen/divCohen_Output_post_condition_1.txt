>>> file_name='benchmark/divCohen.java'
>>> axiom=translate(file_name)
divCohen
 Class Name:
divCohen
 Class Variables:
{}
Method Name:
divCohen
Return Type:
void
Input Variables:
{ Y:int X:int}
Local Variables:
{ q:int A:int B:int r:int}
All Variables:
{ A:int B:int q:int r:int Y:int X:int}

Output in normal notation:
1. Frame axioms:
Y1 = Y
X1 = X

2. Output equations:
A1 = A7(_N2)
q1 = q7(_N2)
r1 = r7(_N2)
B1 = B7(_N2)

3. Other axioms:
(r7(_n2)<(2*((2**_N1(_n2))*Y)))
(_n1<_N1(_n2)) -> (r7(_n2)>=(2*((2**_n1)*Y)))
A7(_n2+1) = ((2**_N1(_n2))*1)
q7(_n2+1) = (q7(_n2)+((2**_N1(_n2))*1))
B7(_n2+1) = ((2**_N1(_n2))*Y)
r7(_n2+1) = (r7(_n2)-((2**_N1(_n2))*Y))
A7(0) = A
q7(0) = 0
B7(0) = B
r7(0) = X
(r7(_N2)<Y)
(_n2<_N2) -> (r7(_n2)>=Y)
Times to Translate
1445
>>> 
>>> pre_condition=['X>=0','Y>0']
>>> post_condition=['X==Y*q1+r1']
>>> prove(axiom,pre_condition,post_condition)
 Try to prove following using induction on _n2
ForAll(_n2,X==Y*q7(_n2) + r7(_n2))
Base Case
X==Y*q7(0) + r7(0)
Successfully Proved
Inductive Step
Inductive Assumption
X==Y*q7(_k1) + r7(_k1)
Successfully Proved
125079