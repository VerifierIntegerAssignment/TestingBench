>>> file_name='benchmark/divHard.java'
>>> axiom=translate(file_name)
divHard
 Class Name:
divHard
 Class Variables:
{}
Method Name:
divHard
Return Type:
void
Input Variables:
{ Y:int X:int}
Local Variables:
{ q:int p:int r:int ds:int}
All Variables:
{ q:int p:int r:int Y:int X:int ds:int}

Output in normal notation:
1. Frame axioms:
Y1 = Y
X1 = X

2. Output equations:
q1 = q7(_N2)
p1 = ((2**-(_N2))*((2**_N1)*1))
r1 = r7(_N2)
ds1 = ((2**-(_N2))*((2**_N1)*Y))

3. Other axioms:
(X<((2**_N1)*Y))
(_n1<_N1) -> (X>=((2**_n1)*Y))
q7(_n2+1) = ite(r7(_n2)>=(((2**-(_n2))*((2**_N1)*Y))/2),q7(_n2)+(((2**-(_n2))*((2**_N1)*1))/2),q7(_n2))
r7(_n2+1) = ite(r7(_n2)>=(((2**-(_n2))*((2**_N1)*Y))/2),r7(_n2)-(((2**-(_n2))*((2**_N1)*Y))/2),r7(_n2))
q7(0) = 0
r7(0) = X
(((2**-(_N2))*((2**_N1)*1))==1)
(_n2<_N2) -> (((2**-(_n2))*((2**_N1)*1))!=1)
Times to Translate
777
>>> 
>>> pre_condition=['X>=0','Y>0']
>>> post_condition=['X==Y*q1+r1']
>>> prove(axiom,pre_condition,post_condition)
 Try to prove following using induction on _n2
ForAll(_n2,X==Y*q7(_n2) + r7(_n2))
Base Case
X==Y*q7(0) + r7(0)
Successfully Proved
Inductive Step
Inductive Assumption
X==Y*q7(_k1) + r7(_k1)
Failed to Prove
245873