>>> file_name='sv-benchmarks/loop-lit/gj2007_true-unreach-call_true-termination-i.c'
>>> translate(file_name)
Program Body
{
  int RET = 0;
  int _1_PROVE = 0;
  int x = 0;
  int y = 50;
  while (x < 100)
  {
    if (x < 50)
    {
      x = x + 1;
    }
    else
    {
      x = x + 1;
      y = y + 1;
    }

  }

  _1_PROVE = y == 100;
  RET = 0;
}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ y:int x:int _1_PROVE:int RET:int}
Program Body
{
  int RET = 0;
  int _1_FAILED = 0;
  if (cond <= 0)
  {
    ERROR:


    _1_FAILED = 1;
  }

}

Function Name:
__VERIFIER_assert
Return Type:
void
Input Variables:
{ cond:int}
Local Variables:
{ _1_FAILED:int RET:int}
Output for main:
Output in prefix notation:
1. Frame axioms:

2. Output equations:
(= y1 (y4 (_N1 0) 50 0))
(= x1 (x4 (_N1 0) 0))
(= main 0)

3. Other axioms:
(= (y4 (+ _n1 1) _y1 _y2) (ite (< (x4 _n1 _y2) 50) (y4 _n1 _y1 _y2) (+ (y4 _n1 _
y1 _y2) 1)))
(= (x4 (+ _n1 1) _y2) (ite (< (x4 _n1 _y2) 50) (+ (x4 _n1 _y2) 1) (+ (x4 _n1 _y2
) 1)))
(= (y4 0 _y1 _y2) _y1)
(= (x4 0 _y2) _y2)
(>= 0 (+ (- (x4 (_N1 _y2) _y2)) 100))
(implies (< _n1 (_N1 _y2)) (< (x4 _n1 _y2) 100))
(iff (= (_N1 _y2) 0) (not (< _y2 100)))
(iff (= (_N1 _y2) (+ _n1 1)) (= _n1 (_N1 (ite (< _y2 50) (+ _y2 1) (+ _y2 1)))))

(= (y4 (+ _n1 1) _y1 _y2) (y4 _n1 (ite (< _y2 50) _y1 (+ _y1 1)) (ite (< _y2 50)
 (+ _y2 1) (+ _y2 1))))
(= (x4 (+ _n1 1) _y2) (x4 _n1 (ite (< _y2 50) (+ _y2 1) (+ _y2 1))))

Output in normal notation:
1. Frame axioms:

2. Output equations:
y1 = y4(_N1(0),50,0)
x1 = x4(_N1(0),0)
main = 0

3. Other axioms:
y4((_n1+1),_y1,_y2) = ite((x4(_n1,_y2)<50),y4(_n1,_y1,_y2),(y4(_n1,_y1,_y2)+1))
x4((_n1+1),_y2) = ite((x4(_n1,_y2)<50),(x4(_n1,_y2)+1),(x4(_n1,_y2)+1))
y4(0,_y1,_y2) = _y1
x4(0,_y2) = _y2
(0>=(-(x4(_N1(_y2),_y2))+100))
(_n1<_N1(_y2)) -> (x4(_n1,_y2)<100)
_N1(_y2)=0 <=> not (_y2<100)
_N1(_y2)=_n1+1 <=> (_n1=_N1(ite((_y2<50),(_y2+1),(_y2+1))))
y4((_n1+1),_y1,_y2) = y4(_n1,ite((_y2<50),_y1,(_y1+1)),ite((_y2<50),(_y2+1),(_y2
+1)))
x4((_n1+1),_y2) = x4(_n1,ite((_y2<50),(_y2+1),(_y2+1)))

4. Assumption :

5. Assertion :
(y4(_N1(0),50,0)==100)
Output for __VERIFIER_assert:
Output in prefix notation:
1. Frame axioms:
(= (cond1 cond) cond)

2. Output equations:
(= (_1_FAILED1 cond) (ite (<= cond 0) 1 0))
(= (__VERIFIER_assert cond) 0)

3. Other axioms:

Output in normal notation:
1. Frame axioms:
cond1(cond) = cond

2. Output equations:
_1_FAILED1(cond) = ite((cond<=0),1,0)
__VERIFIER_assert(cond) = 0

3. Other axioms:

4. Assumption :

5. Assertion :